package pro.Sky.EmployeeBook;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;


//        Шаг 1
//        Подключите к вашему проекту из прошлых домашних заданий (книге сотрудников) библиотеку commons-lang3
//        (с помощью Maven).
//
//        Шаг 2
//        Реализуйте проверку всех входящих от пользователя текстовых данных (имена сотрудников и фамилии) с помощью
//        класса StringUtils.
//        Если проверка не пройдена, выбросить исключение, возвращающее статус 400 Bad Request.
//
//        Шаг 3
//        Если данные прошли проверку, убедиться, что имя и фамилия будут записаны в сотрудника с большой буквы.
//

//              Тестирование

//        EmployeeService не имеет зависимостей, поэтому должен быть покрыт с помощью JUnit.
//        DepartmentService имеет зависимость на EmployeeService, поэтому потребуется еще и Mockito.
//
//        Шаг 1. Необходимо покрыть тестами все операции по работе с сотрудниками из EmployeeService (добавление,
//        удаление, поиск).
//
//        Нужно покрыть максимальное количество ситуаций, например добавление сотрудника, который уже есть в коллекции,
//        или удаление сотрудника, которого нет.
//
//        Шаг 2. Необходимо покрыть тестами все операции по работе с отделами из DepartmentService.
//
//        Нужно «замокать» EmployeeService, который возвращает список сотрудников, а уже затем покрыть все методы
//        сервиса тестами с максимальным количеством придуманных ситуаций. Например, когда переданный отдел отсутствует
//        или вообще не передан пользователем.

@SpringBootApplication
public class EmployeeBookApplication {
    public static void main(String[] args) {
        SpringApplication.run(EmployeeBookApplication.class, args);
    }

}
